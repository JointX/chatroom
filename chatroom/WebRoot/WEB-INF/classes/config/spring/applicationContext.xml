<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd ">

 <context:annotation-config/>
<!-- 配置dbcp数据库连接池 -->
<!-- 加载配置文件 -->
<context:property-placeholder location="classpath:config/mybatis/db.properties"/>
<!-- 数据库连接池,我们用的dbcp连接池，c3p0也是这样配-->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
       	<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="30"/>
		<property name="maxIdle" value="5"/>
</bean>


<!-- 配置会话工厂SqlSessionFactory,先将mybatis的会话工厂注入到spring容器中-->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  <!-- 数据源 ，工厂创建的依赖-->
  <property name="dataSource" ref="dataSource"/>
  <!-- 加载 ，工厂创建的依赖SqlMapConfig.xml -->
  <property name="configLocation" value="classpath:config/mybatis/SqlMapConfig.xml"/>
</bean>

<!-- 在spring容器中配置mapper的扫描器
产生的动态代理对象在spring的容器中自动注册，bean的id就是mapper类名，dao接口的类名小写首字母（首字母小写）
 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  		<!-- 指定扫描包的路径，就是mapper接口的路径，多个包中间以 半角逗号  -->
  <property name="basePackage" value="ssm.lzj.dao"/>
 		<!-- 配置sqlSessionFactoryBeanName-->
  <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
</bean>

<!-- 使用声明式的对事物进行控制，有些人还再使用，需要注意，注解就代替这种声明的方式管理事物 -->
<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 管理事物肯定得要数据源
	<property name="dataSource" ref="dataSource"></property>
</bean>

通知
<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<tx:attributes>
		传播行为 
		<tx:method name="save*" propagation="REQUIRED"/>
		<tx:method name="update*" propagation="REQUIRED"/>
		<tx:method name="delete*" propagation="REQUIRED"/>
		<tx:method name="query*" propagation="REQUIRED"/>
		<tx:method name="find*"  propagation="SUPPORTS" read-only="true"/>
		<tx:method name="findAll*"  propagation="SUPPORTS" read-only="true"/>
		<tx:method name="get*"  propagation="SUPPORTS" read-only="true"/>
	</tx:attributes>
</tx:advice>
aop 
<aop:config>
	<aop:advisor advice-ref="txAdvice" pointcut="execution(* ssm.lzj.service.impl.*.*(..))"/>
</aop:config> -->
</beans>